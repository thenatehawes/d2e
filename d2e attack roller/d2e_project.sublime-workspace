{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"raw",
				"raw_defense\tstatement"
			],
			[
				"attack",
				"attack_result\tclass"
			],
			[
				"surge",
				"surge_mods\tstatement"
			],
			[
				"surg",
				"surge_mod2\tstatement"
			],
			[
				"rand",
				"rand_side\tstatement"
			]
		]
	},
	"buffers":
	[
		{
			"file": "d2e_unit_test.py",
			"settings":
			{
				"buffer_size": 1262,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "d2e_mods.py",
			"settings":
			{
				"buffer_size": 2852,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "d2e_attack_result.py",
			"settings":
			{
				"buffer_size": 1217,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "class"
			}
		},
		{
			"file": "d2e_die.py",
			"settings":
			{
				"buffer_size": 4681,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "from d2e_die import dieside, die\nfrom d2e_mods import attack_mod, surge_mod\nfrom d2e_attack_result import attack_result\n\n\nclass attack:\n\n    def __init__(self, attack_dice, defense_dice, attack_range, attack_mod=[], surge_abilities=[], sorcery_first=True):\n        self.attack_dice = []\n        self.defense_dice = []\n        self.attack_mod = []\n        self.surge_abilities = []\n        self.attack_range = attack_range\n        self.sorcery_first = sorcery_first\n\n        for i in range(len(attack_dice)):\n            tmp_die = die(attack_dice[i])\n            self.attack_dice.append(tmp_die)\n\n        for i in range(len(defense_dice)):\n            tmp_die = die(defense_dice[i])\n            self.defense_dice.append(tmp_die)\n\n        for i in range(len(attack_mod)):\n            self.attack_mod.append(attack_mod[i])\n\n        for i in range(len(surge_abilities)):\n            self.surge_abilities.append(surge_abilities[i])\n\n    def RollAttack(self, attack_override=[], defense_override=[]):\n        ###########################################\n        # Step 1: Declare Target & Weapon\n        ###########################################\n        # This doesn't really have to happen, let's load existing attack mods,\n        # surge mods, and make the attack_result object\n        att_res = attack_result()\n\n        cum_mod = attack_mod()\n        for i in self.attack_mod:\n            cum_mod += i\n\n        surge_ability_list = []\n        for i in self.surge_abilities:\n            surge_ability_list.append(i)\n            cum_mod += i  # NOTE: This is for testing only, disable this\n\n        print(\"Printing Cumulative Mod\")\n        attack_mod.PrintMod(cum_mod)\n\n        ###########################################\n        # Step 2: Roll Dice\n        ###########################################\n\n        att_cum = dieside()\n\n        if not attack_override:\n            #  If attack_override is empty, then actually roll\n            for i in range(len(self.attack_dice)):\n                att_cum += die.roll(self.attack_dice[i])\n        else:\n            #  Don't do a random roll\n            for i in range(len(self.attack_dice)):\n                att_cum += die.roll(self.attack_dice[i], attack_override[i])\n\n        att_res.raw_attack = att_cum\n        def_cum = dieside()\n\n        if not defense_override:\n            #  If defense_override is empty, then actually roll\n            for i in range(len(self.defense_dice)):\n                def_cum += die.roll(self.defense_dice[i])\n        else:\n            #  Don't do a random roll\n            for i in range(len(self.defense_dice)):\n                def_cum += die.roll(self.defense_dice[i], defense_override[i])\n\n        att_res.raw_defense = def_cum\n\n        return att_res\n        ###########################################\n        # Step 3: Check Range, Use sorcery/surge abilities that grant range if nec.\n        ###########################################\n        \n        range_needed = self.attack_range - (cum_mod.range + att_cum.range)\n        no_sorcery = False\n        no_range_mods = False\n\n        while range_needed > 0:\n            # Attack will miss without sorcery/surge abilities\n\n            if self.sorcery_first==True:\n\n                if cum_mod.sorcery > range_needed:\n                    # spend range_needed sorcery, update range_needed\n                elif cum_mod.sorcery > 0:\n                    # spend cum_mod.sorcery, update range_needed\n                else:\n                    no_sorcery = True\n            else:\n                #\n\n            \n\n\n        ###########################################\n        # Step 4: Use surge abilities\n        ###########################################\n\n        ###########################################\n        # Step 5: Calculate results\n        ###########################################\n\n        ###########################################\n        # Step 6: Return attack_result object\n        ###########################################\n",
			"file": "d2e_attack.py",
			"file_size": 4032,
			"file_write_time": 131494481388204694,
			"settings":
			{
				"buffer_size": 3974,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 584.0,
		"last_filter": "package",
		"selected_items":
		[
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 464.0
	},
	"console":
	{
		"height": 301.0,
		"history":
		[
			"import socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((\"localhost\", 57197))",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Nate/Documents/GitHub/d2e/d2e attack roller"
	],
	"file_history":
	[
		"/C/Users/Krissy/AppData/Roaming/Sublime Text 3/Packages/User/Anaconda.sublime-build",
		"/C/Users/Krissy/Documents/MATLAB/Projects/Espey Xfrm Model/init.m",
		"/C/Users/Krissy/Documents/MATLAB/Projects/Espey Xfrm Model/xfrm_params.m",
		"/C/Users/Krissy/Documents/test/secondfile.c",
		"/C/Users/Krissy/Documents/test/doxytest.c",
		"/C/Program Files/MATLAB/R2016a/bin/f_1.m",
		"/C/Program Files/MATLAB/R2016a/bin/w_1.m",
		"/C/Users/Krissy/Documents/MATLAB/Projects/oocontrol/control_block.m"
	],
	"find":
	{
		"height": 31.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"+",
			"new_raw",
			"status",
			"status_effect",
			"side",
			"=",
			"side",
			",",
			"firstAttack",
			"attack_dice",
			"attack_override",
			"att_cum",
			"attack_mod",
			"attack_dice",
			"none",
			"pri",
			"v_pri",
			"p_rated"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "d2e_unit_test.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1262,
						"regions":
						{
						},
						"selection":
						[
							[
								1131,
								1131
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "d2e_mods.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2852,
						"regions":
						{
						},
						"selection":
						[
							[
								2147,
								2147
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 113.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "d2e_attack_result.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1217,
						"regions":
						{
						},
						"selection":
						[
							[
								947,
								947
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"auto_name": "class",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "d2e_die.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4681,
						"regions":
						{
						},
						"selection":
						[
							[
								699,
								699
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "d2e_attack.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3974,
						"regions":
						{
						},
						"selection":
						[
							[
								1827,
								1827
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 691.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 47.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 297.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "d2e_project.sublime-project",
	"replace":
	{
		"height": 58.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 153.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
